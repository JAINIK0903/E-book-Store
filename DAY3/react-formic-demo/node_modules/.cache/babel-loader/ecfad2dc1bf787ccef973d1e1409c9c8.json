{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jainik\\\\OneDrive\\\\Desktop\\\\TS1\\\\react-formic-demo\\\\src\\\\components\\\\YoutubeForm.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\n\nfunction YoutubeForm() {\n  var formik = useFormik({\n    initialValues: {\n      name: 'Vishwas',\n      email: '',\n      channel: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log('Form data', values);\n    },\n    validate: function validate(values) {\n      //values.name values.email values.channel\n      //errors.name errors.email errors.channel\n      //errors.name='this field is required'\n      var errors = {};\n\n      if (!values.name) {\n        errors.name = 'Required';\n      }\n\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-z]{2,4}$/i.test(values.email)) if (!values.channel) {\n        errors.channel = 'Required';\n      }\n\n      return errors;\n    }\n  }); //console.log('Form values',formik.values)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"lable\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    Onchange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"lable\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    Onchange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"lable\", {\n    htmlFor: \"channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Channel\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"channel\",\n    name: \"channel\",\n    Onchange: formik.handleChange,\n    value: formik.values.channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default YoutubeForm;","map":{"version":3,"names":["React","useFormik","YoutubeForm","formik","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","test","handleSubmit","handleChange"],"sources":["C:/Users/jainik/OneDrive/Desktop/TS1/react-formic-demo/src/components/YoutubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\n\r\nfunction YoutubeForm () {\r\n  const  formik=useFormik({\r\n    initialValues: {\r\n        name:'Vishwas',\r\n        email:'',\r\n        channel:''\r\n    },\r\n    onSubmit:values => {\r\n        console.log('Form data',values)\r\n    },\r\n    validate: values => {\r\n        //values.name values.email values.channel\r\n        //errors.name errors.email errors.channel\r\n        //errors.name='this field is required'\r\n\r\n        let errors={}\r\n           if(!values.name){\r\n            errors.name= 'Required'\r\n           }\r\n           \r\n        \r\n        if(!values.email){\r\n         errors.email= 'Required'\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-z]{2,4}$/i.test(values.email))\r\n        \r\n        \r\n           if(!values.channel){\r\n            errors.channel= 'Required'\r\n           }\r\n        return errors\r\n    }\r\n  })\r\n\r\n  //console.log('Form values',formik.values)\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <lable htmlFor='name'>Name</lable>\r\n            <input type='text' id='name' name='name' Onchange={formik.handleChange} value={formik.values.name} />\r\n\r\n            <lable htmlFor='email'>E-mail</lable>\r\n            <input type='email' id='email' name='email' Onchange={formik.handleChange} value={formik.values.email} />\r\n\r\n            <lable htmlFor='channel'>Channel</lable>\r\n            <input type='text' id='channel' name='channel' Onchange={formik.handleChange} value={formik.values.channel} />\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\nexport default YoutubeForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,QAAxB;;AAEA,SAASC,WAAT,GAAwB;EACtB,IAAOC,MAAM,GAACF,SAAS,CAAC;IACtBG,aAAa,EAAE;MACXC,IAAI,EAAC,SADM;MAEXC,KAAK,EAAC,EAFK;MAGXC,OAAO,EAAC;IAHG,CADO;IAMtBC,QAAQ,EAAC,kBAAAC,MAAM,EAAI;MACfC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,MAAxB;IACH,CARqB;IAStBG,QAAQ,EAAE,kBAAAH,MAAM,EAAI;MAChB;MACA;MACA;MAEA,IAAII,MAAM,GAAC,EAAX;;MACG,IAAG,CAACJ,MAAM,CAACJ,IAAX,EAAgB;QACfQ,MAAM,CAACR,IAAP,GAAa,UAAb;MACA;;MAGJ,IAAG,CAACI,MAAM,CAACH,KAAX,EAAiB;QAChBO,MAAM,CAACP,KAAP,GAAc,UAAd;MACA,CAFD,MAEO,IAAI,CAAC,4CAA4CQ,IAA5C,CAAiDL,MAAM,CAACH,KAAxD,CAAL,EAGJ,IAAG,CAACG,MAAM,CAACF,OAAX,EAAmB;QAClBM,MAAM,CAACN,OAAP,GAAgB,UAAhB;MACA;;MACJ,OAAOM,MAAP;IACH;EA7BqB,CAAD,CAAvB,CADsB,CAiCtB;;EAEE,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAM,QAAQ,EAAEV,MAAM,CAACY,YAAvB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAO,OAAO,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UADJ,eAEI;IAAO,IAAI,EAAC,MAAZ;IAAmB,EAAE,EAAC,MAAtB;IAA6B,IAAI,EAAC,MAAlC;IAAyC,QAAQ,EAAEZ,MAAM,CAACa,YAA1D;IAAwE,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcJ,IAA7F;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFJ,eAII;IAAO,OAAO,EAAC,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAJJ,eAKI;IAAO,IAAI,EAAC,OAAZ;IAAoB,EAAE,EAAC,OAAvB;IAA+B,IAAI,EAAC,OAApC;IAA4C,QAAQ,EAAEF,MAAM,CAACa,YAA7D;IAA2E,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcH,KAAhG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALJ,eAOI;IAAO,OAAO,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aAPJ,eAQI;IAAO,IAAI,EAAC,MAAZ;IAAmB,EAAE,EAAC,SAAtB;IAAgC,IAAI,EAAC,SAArC;IAA+C,QAAQ,EAAEH,MAAM,CAACa,YAAhE;IAA8E,KAAK,EAAEb,MAAM,CAACM,MAAP,CAAcF,OAAnG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EARJ,eASI;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YATJ,CADA,CADJ;AAeH;;AACD,eAAeL,WAAf"},"metadata":{},"sourceType":"module"}