{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jainik\\\\OneDrive\\\\Desktop\\\\TS1\\\\react-formic-demo\\\\src\\\\components\\\\YoutubeForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  email: '',\n  channel: ''\n};\n\nconst onSubmit = values => {//console.log('Form data',values)\n};\n\nconst validate = values => {\n  // values.name ,values.email ,values.channel\n  // errors.name, errors.email ,errors.channel\n  errors.name = 'this field is required';\n  let errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid Email';\n  }\n\n  return errors;\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required'),\n  email: Yup.string().email('invalid format').required('Required')\n});\n\nfunction YoutubeForm() {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    //validate\n    validationSchema\n  });\n  console.log('Form Errors', formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          onChange: formik.handleChange,\n          value: formik.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\",\n          onChange: formik.handleChange,\n          value: formik.values.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 38\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = YoutubeForm;\nexport default YoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useFormik","Yup","initialValues","name","email","channel","onSubmit","values","validate","errors","test","validationSchema","object","string","required","YoutubeForm","formik","console","log","handleSubmit","handleChange"],"sources":["C:/Users/jainik/OneDrive/Desktop/TS1/react-formic-demo/src/components/YoutubeForm.js"],"sourcesContent":["import React from 'react'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst initialValues={\r\n    name:'',\r\n    email:'',\r\n    channel:''\r\n}\r\nconst onSubmit = values =>{\r\n    //console.log('Form data',values)\r\n}\r\nconst validate= values => {\r\n   // values.name ,values.email ,values.channel\r\n   // errors.name, errors.email ,errors.channel\r\n    errors.name='this field is required'\r\n\r\nlet errors={}\r\nif(!values.name){\r\n errors.name= 'Required'\r\n}\r\n\r\n\r\nif(!values.email){\r\nerrors.email= 'Required'\r\n} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-z]{2,4}$/i.test(values.email))\r\n{\r\n    errors.email='Invalid Email'\r\n}\r\n\r\nreturn errors\r\n}\r\n\r\nconst validationSchema= Yup.object({\r\n    name:Yup.string().required('Required'),\r\n    email:Yup.string()\r\n    .email('invalid format')\r\n    .required('Required')\r\n})\r\n\r\n\r\nfunction YoutubeForm () {\r\n  const  formik=useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    //validate\r\n   validationSchema\r\n  }) \r\n    \r\n \r\n  console.log('Form Errors',formik.errors)\r\n    return (\r\n        <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div className='form-control'>\r\n            <lable htmlFor='name'>Name</lable>\r\n            <input type='text' id='name' name='name' onChange={formik.handleChange} value={formik.values.name}/>\r\n             {formik.errors.name ? <div className='error'>{formik.errors.name}</div> :null }</div>\r\n             <div className='form-control'>\r\n            <lable htmlFor='email'>E-mail</lable>\r\n            <input type='email' id='email' name='email' onChange={formik.handleChange} value={formik.values.email} />\r\n            {formik.errors.email ? <div className='error'>{formik.errors.email}</div> :null }\r\n            </div>\r\n            <div className='form-control'>\r\n            <lable htmlFor='channel'>Channel</lable>\r\n            <input type='text' id='channel' name='channel' onChange={formik.handleChange} value={formik.values.channel} />\r\n            {formik.errors.channel ? <div className='error'>{formik.errors.channel}</div> :null }\r\n            </div>\r\n            <button type='submit'>Submit</button>\r\n        </form>\r\n        </div>\r\n    )\r\n    }\r\nexport default YoutubeForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}